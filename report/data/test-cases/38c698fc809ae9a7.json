{
  "uid" : "38c698fc809ae9a7",
  "name" : "test_login[xiaoqiang-123456]",
  "fullName" : "pytest-practice.test_parametrize#test_login",
  "historyId" : "8d1d90df49e0e79c6569031af5d0098d",
  "time" : {
    "start" : 1606637675231,
    "stop" : 1606637675233,
    "duration" : 2
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'xiaoqiang' == 'rose'\n  - rose\n  + xiaoqiang",
  "statusTrace" : "user = 'xiaoqiang', pwd = '123456'\n\n    @pytest.mark.parametrize(\"user,pwd\",\n                             [(\"xiaoqiang\", \"123456\"), (\"rose\", \"123456\"),\n                              pytest.param(\"jone\", \"123456\", marks=pytest.mark.xfail),\n                              pytest.param(\"Alex\", \"123456\", marks=pytest.mark.skip)])\n    def test_login(user, pwd):\n        print(user + \" : \" + pwd)\n>       assert user == \"rose\"\nE       AssertionError: assert 'xiaoqiang' == 'rose'\nE         - rose\nE         + xiaoqiang\n\npytest-practice\\test_parametrize.py:29: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1606637675069,
      "stop" : 1606637675069,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "get_userinfo",
    "time" : {
      "start" : 1606637675229,
      "stop" : 1606637675229,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'xiaoqiang' == 'rose'\n  - rose\n  + xiaoqiang",
    "statusTrace" : "user = 'xiaoqiang', pwd = '123456'\n\n    @pytest.mark.parametrize(\"user,pwd\",\n                             [(\"xiaoqiang\", \"123456\"), (\"rose\", \"123456\"),\n                              pytest.param(\"jone\", \"123456\", marks=pytest.mark.xfail),\n                              pytest.param(\"Alex\", \"123456\", marks=pytest.mark.skip)])\n    def test_login(user, pwd):\n        print(user + \" : \" + pwd)\n>       assert user == \"rose\"\nE       AssertionError: assert 'xiaoqiang' == 'rose'\nE         - rose\nE         + xiaoqiang\n\npytest-practice\\test_parametrize.py:29: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "27dfb5f58bb67c89",
      "name" : "stdout",
      "source" : "27dfb5f58bb67c89.txt",
      "type" : "text/plain",
      "size" : 149
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1606637675473,
      "stop" : 1606637675473,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "pytest-practice"
  }, {
    "name" : "suite",
    "value" : "test_parametrize"
  }, {
    "name" : "host",
    "value" : "DESKTOP-6C60QCJ"
  }, {
    "name" : "thread",
    "value" : "16672-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "pytest-practice.test_parametrize"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "pwd",
    "value" : "'123456'"
  }, {
    "name" : "user",
    "value" : "'xiaoqiang'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "38c698fc809ae9a7.json",
  "parameterValues" : [ "'123456'", "'xiaoqiang'" ]
}